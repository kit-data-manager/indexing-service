plugins { 
    id "org.springframework.boot" version "2.7.8"
    id "io.spring.dependency-management" version "1.1.0" 
    id "io.freefair.lombok" version "6.6.1"
    id "io.freefair.maven-publish-java" version "6.6.1"
    id "org.owasp.dependencycheck" version "8.0.1"
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'net.researchgate.release' version '3.0.2'
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
    id 'java'
    id 'jacoco'
}

ext {
  // versions of dependencies
  javersVersion     = '6.8.2'
  springDocVersion  = '1.6.14'
}

description = 'Generic indexing service supporting different mapping implementations.'
group = 'edu.kit.datamanager'

println "Running gradle version: $gradle.gradleVersion"
println "Building ${name} version: ${version}"
println "JDK version: ${JavaVersion.current()}"

repositories {
    mavenLocal() 
    jcenter()
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

 
configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

if (System.getProperty('profile') == 'minimal') {
    println 'Using minimal profile for building ' + project.getName()
    apply from: 'gradle/profile-minimal.gradle'   
} else {
    println 'Using default profile executing all tests for building ' + project.getName()
    apply from: 'gradle/profile-complete.gradle'
}

dependencies {
    // Spring
    implementation 'org.springframework:spring-messaging:5.3.25'
    implementation 'org.springframework.cloud:spring-cloud-gateway-mvc:3.1.4'

    // Spring Boot
    // boot starter
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-amqp"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-rest"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-validation"    
    implementation "org.springframework.boot:spring-boot-starter-web"
   

    //security
    implementation "org.springframework.security:spring-security-web:5.7.5"
    implementation "org.springframework.security:spring-security-config:6.0.1"
    
 
    // springdoc
    implementation "org.springdoc:springdoc-openapi-ui:${springDocVersion}"
    implementation "org.springdoc:springdoc-openapi-data-rest:${springDocVersion}"
    implementation "org.springdoc:springdoc-openapi-webmvc-core:${springDocVersion}"

    // driver for postgres
    implementation "org.postgresql:postgresql:42.5.1"
    //driver for h2
    implementation "com.h2database:h2:2.1.214"
    
    //apache
    implementation "org.apache.tika:tika-core:2.6.0"
    implementation "commons-codec:commons-codec:1.15"
  
    implementation "com.github.jknack:handlebars:4.3.1"
    implementation "org.json:json:20220924"
  
    // javers
    implementation "org.javers:javers-spring-boot-starter-sql:${javersVersion}"
    implementation "org.javers:javers-core:${javersVersion}"

    // datamanager
    implementation("edu.kit.datamanager:generic-message-consumer:1.0.0")
    implementation "edu.kit.datamanager:service-base:1.1.0"

    // actuator
    implementation 'de.codecentric:spring-boot-admin-starter-client:2.7.10'

    runtimeOnly    'org.apache.httpcomponents:httpclient:4.5.6'

    // Additional libraries for tests
    testImplementation "com.google.guava:guava:31.1-jre"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:2.0.6.RELEASE"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework:spring-test"
    testImplementation "org.springframework.security:spring-security-test"
   
    //Java 11 Support 
    testImplementation "org.mockito:mockito-core:4.8.1"
    testImplementation "junit:junit:4.13.2"

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.7.RELEASE'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.7.RELEASE'
}

jar {
    // disable plain jar file
    enabled = false
}

springBoot {    
    buildInfo()
}

bootJar {
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
    }
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    launchScript()
}

task prepareElastic(type:Exec) {
  println 'Start elasticsearch container'
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    println '##################################################################'
    println 'ATTENTION: Please start elasticsearch by your own!'
    println '##################################################################'
  } else {
    commandLine "bash", "./manageIndexingFramework.sh", "test"
  }
}

task stopElastic(type:Exec) {
  println 'Stop elasticsearch container'
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    println '##################################################################'
    println 'ATTENTION: Please stop elasticsearch by your own!'
    println '##################################################################'
  } else {
    commandLine "bash", "./manageIndexingFramework.sh", "stop_test"
  }
}

test {
    dependsOn prepareElastic
    finalizedBy stopElastic, jacocoTestReport
    environment "spring.config.location", "classpath:/test-config/"

    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}

jacoco {
    toolVersion = "0.8.8"
}

// task for printing project name.
task printProjectName {
    doLast {
        println "${project.name}"
    }
}
